{"version":3,"file":null,"sources":["src/speechAPI.js","src/plugin.js"],"sourcesContent":["const SpeechAPI = window.speechRecognition || window.webkitSpeechRecognition;\nconst isSupported = !!SpeechAPI;\n\nfunction createRecognition( editor ) {\n\tconst recognition = new SpeechAPI();\n\n\trecognition.continuous = true;\n\trecognition.maxAlternatives = 1;\n\trecognition.lang = editor.config.contentsLanguage || editor.langCode;\n\n\trecognition.addEventListener( 'result', ( evt ) => {\n\t\tfor ( let i = evt.resultIndex; i < evt.results.length; i++ ) {\n\t\t\teditor.insertHtml( `${ event.results[ i ][ 0 ].transcript } ` );\n\t\t}\n\t}, false );\n\n\treturn recognition;\n}\n\nexport { isSupported };\nexport { createRecognition };\n","/* global CKEDITOR */\n\n/**\n * @license Copyright (c) 2016, Comandeer. All rights reserved.\n * For licensing, see LICENSE.\n */\n\n/**\n * @fileOverview Speak2type plugin.\n */\n\nimport { createRecognition } from './speechAPI';\nimport { isSupported } from './speechAPI';\n\nCKEDITOR.plugins.add( 'speak2type', {\n\tlang: 'en',\n\n\tinit( editor ) {\n\t\teditor.addCommand( 'speak2type', {\n\t\t\tstartDisabled: !isSupported,\n\n\t\t\texec( editor ) {\n\t\t\t\tconst cmd = this;\n\t\t\t\tlet recognition = cmd.recognition;\n\n\t\t\t\tif ( !isSupported ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( !recognition ) {\n\t\t\t\t\tcmd.recognition = recognition = createRecognition( editor );\n\t\t\t\t}\n\n\t\t\t\tif ( cmd.state === CKEDITOR.TRISTATE_OFF ) {\n\t\t\t\t\tcmd.setState( CKEDITOR.TRISTATE_ON );\n\t\t\t\t\trecognition.start();\n\t\t\t\t} else if ( CKEDITOR.TRISTATE_ON ) {\n\t\t\t\t\tcmd.setState( CKEDITOR.TRISTATE_OFF );\n\t\t\t\t\trecognition.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.addButton( 'speak2type', {\n\t\t\tlabel: editor.lang.speak2type.label,\n\t\t\tcommand: 'speak2type',\n\t\t\ticon: CKEDITOR.env.hidpi ? `${ this.path }icons/hidpi/speak2type.png` : `${ this.path }icons/speak2type.png`,\n\t\t\ttoolbar: 'insert,0'\n\t\t} );\n\n\t\teditor.setKeystroke( [\n\t\t\t[ 120, 'speak2type' ] // F9\n\t\t] );\n\t}\n} );\n"],"names":["createRecognition","editor","recognition","SpeechAPI","continuous","maxAlternatives","lang","config","contentsLanguage","langCode","addEventListener","evt","i","resultIndex","results","length","insertHtml","event","transcript","window","speechRecognition","webkitSpeechRecognition","isSupported","CKEDITOR","plugins","add","addCommand","cmd","this","state","TRISTATE_OFF","setState","TRISTATE_ON","start","stop","ui","addButton","speak2type","label","env","hidpi","path","setKeystroke"],"mappings":"wBAGA,SAASA,GAAmBC,MACrBC,GAAc,GAAIC,YAEZC,YAAa,IACbC,gBAAkB,IAClBC,KAAOL,EAAOM,OAAOC,kBAAoBP,EAAOQ,WAEhDC,iBAAkB,SAAU,SAAEC,OACnC,GAAIC,GAAID,EAAIE,YAAaD,EAAID,EAAIG,QAAQC,OAAQH,MAC/CI,WAAgBC,MAAMH,QAASF,GAAK,GAAIM,kBAE9C,GAEIhB,EAhBR,GAAMC,GAAYgB,OAAOC,mBAAqBD,OAAOE,wBAC/CC,IAAgBnB,CCUtBoB,UAGSC,QAAQC,IAAK,mBACf,mBAEAxB,KACEyB,WAAY,6BACFJ,gBAEVrB,MACC0B,GAAMC,KACR1B,EAAcyB,EAAIzB,WAEhBoB,KAIApB,MACDA,YAAcA,EAAcF,EAAmBC,IAG/C0B,EAAIE,QAAUN,SAASO,gBACvBC,SAAUR,SAASS,eACXC,SACDV,SAASS,gBAChBD,SAAUR,SAASO,gBACXI,cAKRC,GAAGC,UAAW,oBACbnC,EAAOK,KAAK+B,WAAWC,cACrB,kBACHf,SAASgB,IAAIC,MAAYZ,KAAKa,kCAAwCb,KAAKa,oCACxE,eAGHC,eACJ,IAAK"}